{"version":3,"sources":["webpack:///./src/templates/tagsTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","Tags","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","a","createElement","map","_ref2","node","_node$frontmatter","frontmatter","title","date","slug","fields","key","to","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","children","_856328897","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","href"],"mappings":"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","file":"component---src-templates-tags-template-js-8c4b0b203d1fe13c0f35.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\n\nconst Tags = ({ pageContext, data }) => {\n    const { tag } = pageContext;\n    const { edges, totalCount } = data.allMarkdownRemark;\n    const tagHeader = `${totalCount} post${\n        totalCount === 1 ? '' : 's'\n        } tagged with \"${tag}\"`;\n    return (\n        <Layout>\n            <div>\n                <h1>{tagHeader}</h1>\n                <ul>\n                    {edges.map(({ node }) => {\n                        const { title, date } = node.frontmatter;\n                        const { slug } = node.fields;\n                        return (\n                            <li key={slug}>\n                                <Link to={slug}>\n                                    {title} ({date})\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n                <Link to=\"/tags\">All tags</Link>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport '../styles/styles.scss'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/>\n        <footer>\n          © {new Date().getFullYear()}, Built with ❤ By\n          {` `}\n          <a href=\"https://www.linkedin.com/in/aman-dave/\">Aman</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","TagsPage","_ref","allTags","data","allMarkdownRemark","group","a","createElement","map","tag","key","fieldValue","to","kebabCase","totalCount","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","children","_856328897","Fragment","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","node"],"mappings":"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","file":"component---src-pages-tags-js-2f975932323508aa67da.js","sourcesContent":["// https://www.gatsbyjs.org/docs/adding-tags-and-categories-to-blog-posts/#add-tags-to-your-markdown-files\n\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport { kebabCase } from 'lodash';\n\nimport Layout from '../components/layout';\nconst TagsPage = ({ data }) => {\n    const allTags = data.allMarkdownRemark.group;\n\n    return (\n        <Layout>\n            <div>\n                <h1>Tags</h1>\n                <ul>\n                    {allTags.map(tag => (\n                        <li key={tag.fieldValue}>\n                            <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                                {tag.fieldValue} ({tag.totalCount})\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport '../styles/styles.scss'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/>\n        <footer>\n          © {new Date().getFullYear()}, Built with ❤ By\n          {` `}\n          <a href=\"https://www.linkedin.com/in/aman-dave/\">Aman</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
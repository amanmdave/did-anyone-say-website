{"version":3,"sources":["webpack:///./src/templates/postTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","PostTemplate","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","date","dangerouslySetInnerHTML","__html","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","children","_856328897","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","href","node"],"mappings":"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","file":"component---src-templates-post-template-js-36a231be518c81aee445.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\n\nconst PostTemplate = ({ data }) => {\n    const { markdownRemark } = data;\n    const { frontmatter, html } = markdownRemark;\n    return (\n        <Layout>\n            <section>\n                <div>\n                    <h1>{frontmatter.title}</h1>\n                    <span>{frontmatter.date}</span>\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: html }} />\n            </section>\n        </Layout>\n    );\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport '../styles/styles.scss'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n          <br/><br/><br/><br/><br/><br/><br/><br/><br/>\n        <footer>\n          © {new Date().getFullYear()}, Built with ❤ By\n          {` `}\n          <a href=\"https://www.linkedin.com/in/aman-dave/\">Aman</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}